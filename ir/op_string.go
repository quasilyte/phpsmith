// Code generated by "stringer -type Op -trimprefix Op"; DO NOT EDIT.

package ir

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpInvalid-0]
	_ = x[OpBad-1]
	_ = x[OpBreak-2]
	_ = x[OpContinue-3]
	_ = x[OpIf-4]
	_ = x[OpIfElse-5]
	_ = x[OpWhile-6]
	_ = x[OpDoWhile-7]
	_ = x[OpBlock-8]
	_ = x[OpReturn-9]
	_ = x[OpReturnVoid-10]
	_ = x[OpEcho-11]
	_ = x[OpParens-12]
	_ = x[OpAssign-13]
	_ = x[OpAssignModify-14]
	_ = x[OpBoolLit-15]
	_ = x[OpIntLit-16]
	_ = x[OpFloatLit-17]
	_ = x[OpStringLit-18]
	_ = x[OpArrayLit-19]
	_ = x[OpVar-20]
	_ = x[OpName-21]
	_ = x[OpNot-22]
	_ = x[OpProp-23]
	_ = x[OpIndex-24]
	_ = x[OpConcat-25]
	_ = x[OpAdd-26]
	_ = x[OpSub-27]
	_ = x[OpAnd-28]
	_ = x[OpAndWord-29]
	_ = x[OpOr-30]
	_ = x[OpOrWord-31]
	_ = x[OpXor-32]
	_ = x[OpTernary-33]
	_ = x[OpCall-34]
	_ = x[OpPostfixIncrement-35]
	_ = x[OpPrefixIncrement-36]
	_ = x[OpPostfixDecrement-37]
	_ = x[OpPrefixDecrement-38]
}

const _Op_name = "InvalidBadBreakContinueIfIfElseWhileDoWhileBlockReturnReturnVoidEchoParensAssignAssignModifyBoolLitIntLitFloatLitStringLitArrayLitVarNameNotPropIndexConcatAddSubAndAndWordOrOrWordXorTernaryCallPostfixIncrementPrefixIncrementPostfixDecrementPrefixDecrement"

var _Op_index = [...]uint8{0, 7, 10, 15, 23, 25, 31, 36, 43, 48, 54, 64, 68, 74, 80, 92, 99, 105, 113, 122, 130, 133, 137, 140, 144, 149, 155, 158, 161, 164, 171, 173, 179, 182, 189, 193, 209, 224, 240, 255}

func (i Op) String() string {
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
